- config:
    name: pc关单重派case
    base_url: ${base_url()}
    variables:
        wait_5m: 301
        wait5m_desc: '任务超时后，待等5分钟以便重新调度任务'
        del_flag: '1' #无效标识

        #pc新建订单需要的相关数据
        L1: ['1','5']
        L2: ['黑','B']
        L3: []
        caseNo: ${random_Num(9)}
        ownerPhone: ${random_Num(9, $L1)} #车主手机号
        carNo: ${random_Num(6, $L2)}
        injuredPhone: '13200780881' #pc维护的伤者电话
        #mobile: ${random_Num(9, $L1)} #探视员手机号
        visitorPhone: '15112313347'  #探视员手机号
        visitorSignature: '小小点'  #探视员签名
        injuredSignature: '伤者的名字'  #伤者签名

        birthday: 50653440000  #1986-01-20
        phone: '18681461457'  #h5维护的伤者电话
        beginDate: 1555344000000 #2019-04-16
        endDate: 1556035200000  #2019-04-24
        hospitalizedDate: 1557676800000 #2019-05-13
        leaveDate: 1557763200000  #2019-05-14
        accTime: '1554694924000'

#pc新建订单 -- h5在48小时内未开始作业 -- 任务超时调度给第二家资源公司 -- h5在48小时内未开始作业 -- 任务超时调度给第三家资源公司 -- h5在48小时内未开始作业 -- 关单重派

##########第一家资源公司48小时内未开始作业
- test:
    name: pc新建订单，h5登录查看订单(第一家资料公司)
    testcase: testcases/modulecase/module_addOrder_h5Login.yaml
    output:
        - h5_token
        - pc_token
        #- orderNo
        - orderId
        - operationId
    teardown_hooks:  #登录码的end_effect_time修改为当前时间，从而让登录码失效，从而订单会被重新调度
          - ${orderTimeOut($orderId)}
          - ${sleep($wait_5m,$wait5m_desc)}  #调度任务每5分钟执行一次

- test:
    name: 待作业的订单48小时超时后，用原登录码无法登录
    variables:
        accessCode: ${queryLoginNum($orderId,$del_flag)}
        code: 503
        message: '登录码已失效'
        req_status: 'error'
    testcase: testcases/modulecase/module_h5login_invalid.yaml

- test:
    name: 退出登录
    testcase: testcases/modulecase/module_pclogout_h5logout.yaml

###########第二家资源公司48小时内未开始作业
- test:
    name: h5登录查看订单(第二家资料公司)
    testcase: testcases/modulecase/module_h5_login.yaml
    output:
        - h5_token
        - orderId
        - operationId
    teardown_hooks:  #登录码的end_effect_time修改为当前时间，从而让登录码失效，从而订单会被重新调度
          - ${orderTimeOut($orderId)}
          - ${sleep($wait_5m,$wait5m_desc)}  #调度任务每5分钟执行一次

- test:
    name: 待作业的订单48小时超时后，用原登录码无法登录
    variables:
        accessCode: ${queryLoginNum($orderId,$del_flag)}
        code: 503
        message: '登录码已失效'
        req_status: 'error'
    testcase: testcases/modulecase/module_h5login_invalid.yaml

- test:
    name: 退出登录
    testcase: testcases/modulecase/module_pclogout_h5logout.yaml

##########第三家资源公司48小时内未开始作业
- test:
    name: h5登录查看订单(第三家资料公司)
    testcase: testcases/modulecase/module_h5_login.yaml
    output:
        - h5_token
        - orderId
        - operationId
    teardown_hooks:  #登录码的end_effect_time修改为当前时间，从而让登录码失效，从而订单会被重新调度
          - ${orderTimeOut($orderId)}
          - ${sleep($wait_5m,$wait5m_desc)}  #调度任务每5分钟执行一次

- test:
    name: 查看订单状态为已关单
    variables:
        code: 200
        message: '成功'
        req_status: 'success'
        orderStatus: '07'  #已关单
        operationStatus: '01'  #待作业
    testcase: testcases/modulecase/module_pc_detail.yaml

- test:
    name: pc登录
    testcase: testcases/modulecase/module_pc_login.yaml
    output:
        - pc_token

- test:
    name: 正常关单重派
    api: api/pc/resend.yaml
#    variables:
#        order_status: '07'   #已关单
#        orderId: ${getOrderId($order_status)}
    validate:
        - eq: [status_code, 200]
        - eq: [content.code, 200]
        - eq: [content.message, '处理成功']
        - eq: [content.status, 'success']

#- test:
#    name: 异常场景_订单号为空查看订单
#    api: api/pc/detail.yaml
#    variables:
#        orderId: ''
#    validate:
#        - eq: [status_code, 200]
#        - eq: [content.code, 503]
#        - eq: [content.message, '查询订单详情失败']
#        - eq: [content.status, 'error']